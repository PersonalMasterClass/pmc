var search_data = {"index":{"searchIndex":["applicationcontroller","applicationhelper","applicationmailer","availabilitiescontroller","availabilitieshelper","availability","biannualupdate","bid","bookedcustomer","booking","bookingscontroller","bookingshelper","customer","customerscontroller","customershelper","homecontroller","homehelper","notification","object","presenter","presenterprofile","presenterprofilescontroller","presenterprofileshelper","presenterscontroller","presentershelper","remindernotification","schoolinfo","schoolinfocontroller","schoolinfohelper","searchcontroller","searchhelper","subject","subjecthelper","subjectscontroller","subjectshelper","timetools","user","usermailer","users","confirmationscontroller","omniauthcallbackscontroller","passwordscontroller","registrationscontroller","sessionscontroller","unlockscontroller","userscontroller","usershelper","vitvalidation","add_subject()","admin_drafts()","after_sign_in_path_for()","after_sign_up_path_for()","approve()","approve()","approve_registration()","approve_user()","bid()","booked_label()","by_presenter()","c_dashboard_active?()","check_creator()","check_user()","check_vit()","choose_presenter()","completed()","configure_sign_up_params()","create()","create()","create()","create()","create()","create_customer()","create_presenter()","customers()","dashboard_active?()","destroy()","destroy()","destroy()","destroy()","display_admin_or_customer_nav()","display_admin_or_presenter_nav()","display_notifications()","duration()","edit()","edit()","edit()","edit()","edit_presenter_profile_link()","edit_profile_active?()","edit_subjects()","end_time_string()","find()","find()","for_presenter()","from_string()","fullname()","fullname()","get_days()","get_private_full_name()","if_params_customer?()","if_params_presenter?()","if_params_school_info?()","index()","index()","index()","index()","index()","index()","index()","index()","is_booked()","is_empty?()","list_days()","my_bookings_active?()","new()","new()","new()","new()","new()","new_booking_active?()","new_customer()","new_presenter()","notif_read()","notify_admin()","notify_applicable_users()","open()","open_bookings_active?()","p_dashboard_active?()","p_profile_active?()","p_rego_active?()","pending()","pending_count()","perform()","perform()","presenter_search_active?()","presenters()","presenters_active?()","profile_picture_path()","registration_mail()","registrations()","remove_subject()","schools_active?()","search_active?()","send_message()","set_days()","show()","show()","show()","show()","show()","start_time_string()","subject_active?()","success()","suspend_user()","suspended_customers()","suspended_presenters()","suspended_users()","suspended_users_active?()","times_string()","to_string()","to_string()","unapproved_customers()","unapproved_presenters()","unapproved_profiles()","upcoming()","update()","update()","update()","update()","view_profile_active?()","vit_number_must_be_valid()","vit_number_must_be_valid()","vit_validation()","readme"],"longSearchIndex":["applicationcontroller","applicationhelper","applicationmailer","availabilitiescontroller","availabilitieshelper","availability","biannualupdate","bid","bookedcustomer","booking","bookingscontroller","bookingshelper","customer","customerscontroller","customershelper","homecontroller","homehelper","notification","object","presenter","presenterprofile","presenterprofilescontroller","presenterprofileshelper","presenterscontroller","presentershelper","remindernotification","schoolinfo","schoolinfocontroller","schoolinfohelper","searchcontroller","searchhelper","subject","subjecthelper","subjectscontroller","subjectshelper","timetools","user","usermailer","users","users::confirmationscontroller","users::omniauthcallbackscontroller","users::passwordscontroller","users::registrationscontroller","users::sessionscontroller","users::unlockscontroller","userscontroller","usershelper","vitvalidation","presenterscontroller#add_subject()","presenterprofile::admin_drafts()","users::sessionscontroller#after_sign_in_path_for()","users::registrationscontroller#after_sign_up_path_for()","presenterprofile#approve()","presenterprofilescontroller#approve()","users::registrationscontroller#approve_registration()","userscontroller#approve_user()","bookingscontroller#bid()","bookingshelper#booked_label()","subject::by_presenter()","customershelper#c_dashboard_active?()","booking::check_creator()","user::check_user()","vitvalidation::check_vit()","bookingscontroller#choose_presenter()","booking::completed()","users::registrationscontroller#configure_sign_up_params()","availabilitiescontroller#create()","bookingscontroller#create()","presenterprofilescontroller#create()","presenterscontroller#create()","subjectscontroller#create()","users::registrationscontroller#create_customer()","users::registrationscontroller#create_presenter()","userscontroller#customers()","usershelper#dashboard_active?()","availabilitiescontroller#destroy()","bookingscontroller#destroy()","presenterprofilescontroller#destroy()","subjectscontroller#destroy()","customershelper#display_admin_or_customer_nav()","presentershelper#display_admin_or_presenter_nav()","user#display_notifications()","bookingshelper#duration()","availabilitiescontroller#edit()","bookingscontroller#edit()","presenterprofilescontroller#edit()","subjectscontroller#edit()","applicationhelper#edit_presenter_profile_link()","presentershelper#edit_profile_active?()","presenterscontroller#edit_subjects()","availability#end_time_string()","schoolinfocontroller#find()","subjectscontroller#find()","availability::for_presenter()","timetools::from_string()","customershelper#fullname()","presenterprofileshelper#fullname()","availability#get_days()","presenter#get_private_full_name()","usershelper#if_params_customer?()","usershelper#if_params_presenter?()","usershelper#if_params_school_info?()","availabilitiescontroller#index()","bookingscontroller#index()","customerscontroller#index()","homecontroller#index()","presenterscontroller#index()","searchcontroller#index()","subjectscontroller#index()","userscontroller#index()","bookingshelper#is_booked()","searchhelper#is_empty?()","availability#list_days()","presentershelper#my_bookings_active?()","availabilitiescontroller#new()","bookingscontroller#new()","presenterprofilescontroller#new()","presenterscontroller#new()","subjectscontroller#new()","customershelper#new_booking_active?()","users::registrationscontroller#new_customer()","users::registrationscontroller#new_presenter()","applicationcontroller#notif_read()","notification::notify_admin()","notification::notify_applicable_users()","bookingscontroller#open()","presentershelper#open_bookings_active?()","presentershelper#p_dashboard_active?()","usershelper#p_profile_active?()","usershelper#p_rego_active?()","presenterprofilescontroller#pending()","usershelper#pending_count()","biannualupdate::perform()","remindernotification::perform()","usershelper#presenter_search_active?()","userscontroller#presenters()","usershelper#presenters_active?()","presenter#profile_picture_path()","usermailer#registration_mail()","userscontroller#registrations()","presenterscontroller#remove_subject()","usershelper#schools_active?()","usershelper#search_active?()","notification::send_message()","availability#set_days()","availabilitiescontroller#show()","bookingscontroller#show()","customerscontroller#show()","presenterprofilescontroller#show()","userscontroller#show()","availability#start_time_string()","usershelper#subject_active?()","userscontroller#success()","userscontroller#suspend_user()","user::suspended_customers()","user::suspended_presenters()","userscontroller#suspended_users()","usershelper#suspended_users_active?()","availability#times_string()","availability#to_string()","timetools::to_string()","user::unapproved_customers()","user::unapproved_presenters()","presenterprofile::unapproved_profiles()","booking::upcoming()","availabilitiescontroller#update()","bookingscontroller#update()","presenterprofilescontroller#update()","subjectscontroller#update()","presentershelper#view_profile_active?()","customer#vit_number_must_be_valid()","presenter#vit_number_must_be_valid()","users::registrationscontroller#vit_validation()",""],"info":[["ApplicationController","","ApplicationController.html","",""],["ApplicationHelper","","ApplicationHelper.html","",""],["ApplicationMailer","","ApplicationMailer.html","",""],["AvailabilitiesController","","AvailabilitiesController.html","",""],["AvailabilitiesHelper","","AvailabilitiesHelper.html","",""],["Availability","","Availability.html","",""],["BiannualUpdate","","BiannualUpdate.html","",""],["Bid","","Bid.html","",""],["BookedCustomer","","BookedCustomer.html","",""],["Booking","","Booking.html","",""],["BookingsController","","BookingsController.html","",""],["BookingsHelper","","BookingsHelper.html","",""],["Customer","","Customer.html","",""],["CustomersController","","CustomersController.html","",""],["CustomersHelper","","CustomersHelper.html","",""],["HomeController","","HomeController.html","",""],["HomeHelper","","HomeHelper.html","",""],["Notification","","Notification.html","",""],["Object","","Object.html","",""],["Presenter","","Presenter.html","",""],["PresenterProfile","","PresenterProfile.html","",""],["PresenterProfilesController","","PresenterProfilesController.html","",""],["PresenterProfilesHelper","","PresenterProfilesHelper.html","",""],["PresentersController","","PresentersController.html","",""],["PresentersHelper","","PresentersHelper.html","",""],["ReminderNotification","","ReminderNotification.html","",""],["SchoolInfo","","SchoolInfo.html","",""],["SchoolInfoController","","SchoolInfoController.html","",""],["SchoolInfoHelper","","SchoolInfoHelper.html","",""],["SearchController","","SearchController.html","",""],["SearchHelper","","SearchHelper.html","",""],["Subject","","Subject.html","",""],["SubjectHelper","","SubjectHelper.html","",""],["SubjectsController","","SubjectsController.html","",""],["SubjectsHelper","","SubjectsHelper.html","",""],["TimeTools","","TimeTools.html","","<p>As availibility times and days are stored as integers, call this class for\nconversion.\n"],["User","","User.html","",""],["UserMailer","","UserMailer.html","",""],["Users","","Users.html","",""],["Users::ConfirmationsController","","Users/ConfirmationsController.html","",""],["Users::OmniauthCallbacksController","","Users/OmniauthCallbacksController.html","",""],["Users::PasswordsController","","Users/PasswordsController.html","",""],["Users::RegistrationsController","","Users/RegistrationsController.html","",""],["Users::SessionsController","","Users/SessionsController.html","",""],["Users::UnlocksController","","Users/UnlocksController.html","",""],["UsersController","","UsersController.html","",""],["UsersHelper","","UsersHelper.html","",""],["VitValidation","","VitValidation.html","",""],["add_subject","PresentersController","PresentersController.html#method-i-add_subject","()","<p>add a subject to the presenter&#39;s subject\n"],["admin_drafts","PresenterProfile","PresenterProfile.html#method-c-admin_drafts","()",""],["after_sign_in_path_for","Users::SessionsController","Users/SessionsController.html#method-i-after_sign_in_path_for","(resource)","<p>DELETE /resource/sign_out def destroy\n\n<pre class=\"ruby\"><span class=\"ruby-keyword\">super</span>\n</pre>\n<p>end\n"],["after_sign_up_path_for","Users::RegistrationsController","Users/RegistrationsController.html#method-i-after_sign_up_path_for","(resource)","<p>DELETE /resource def destroy\n\n<pre class=\"ruby\"><span class=\"ruby-keyword\">super</span>\n</pre>\n<p>end\n"],["approve","PresenterProfile","PresenterProfile.html#method-i-approve","()",""],["approve","PresenterProfilesController","PresenterProfilesController.html#method-i-approve","()",""],["approve_registration","Users::RegistrationsController","Users/RegistrationsController.html#method-i-approve_registration","()",""],["approve_user","UsersController","UsersController.html#method-i-approve_user","()",""],["bid","BookingsController","BookingsController.html#method-i-bid","()",""],["booked_label","BookingsHelper","BookingsHelper.html#method-i-booked_label","(booking)",""],["by_presenter","Subject","Subject.html#method-c-by_presenter","(presenter)",""],["c_dashboard_active?","CustomersHelper","CustomersHelper.html#method-i-c_dashboard_active-3F","()",""],["check_creator","Booking","Booking.html#method-c-check_creator","(presenter, creator)",""],["check_user","User","User.html#method-c-check_user","(user)","<p>return a presenter or customer returns nil of user is an admin\n"],["check_vit","VitValidation","VitValidation.html#method-c-check_vit","(presenterFirstName, presenterLastName, presenterVIT)","<p>function to check if a given VIT number is valid, given a presenter First\nName, Last Name and VIT\n"],["choose_presenter","BookingsController","BookingsController.html#method-i-choose_presenter","()",""],["completed","Booking","Booking.html#method-c-completed","(user)","<p>Return completed bookings for a customer or presenter Return all completed\nbookings for an admin\n"],["configure_sign_up_params","Users::RegistrationsController","Users/RegistrationsController.html#method-i-configure_sign_up_params","()","<p>If you have extra params to permit, append them to the sanitizer.\n"],["create","AvailabilitiesController","AvailabilitiesController.html#method-i-create","()","<p>submit form\n"],["create","BookingsController","BookingsController.html#method-i-create","()",""],["create","PresenterProfilesController","PresenterProfilesController.html#method-i-create","()",""],["create","PresentersController","PresentersController.html#method-i-create","()",""],["create","SubjectsController","SubjectsController.html#method-i-create","()",""],["create_customer","Users::RegistrationsController","Users/RegistrationsController.html#method-i-create_customer","()",""],["create_presenter","Users::RegistrationsController","Users/RegistrationsController.html#method-i-create_presenter","()",""],["customers","UsersController","UsersController.html#method-i-customers","()",""],["dashboard_active?","UsersHelper","UsersHelper.html#method-i-dashboard_active-3F","()",""],["destroy","AvailabilitiesController","AvailabilitiesController.html#method-i-destroy","()",""],["destroy","BookingsController","BookingsController.html#method-i-destroy","()",""],["destroy","PresenterProfilesController","PresenterProfilesController.html#method-i-destroy","()",""],["destroy","SubjectsController","SubjectsController.html#method-i-destroy","()",""],["display_admin_or_customer_nav","CustomersHelper","CustomersHelper.html#method-i-display_admin_or_customer_nav","()",""],["display_admin_or_presenter_nav","PresentersHelper","PresentersHelper.html#method-i-display_admin_or_presenter_nav","()",""],["display_notifications","User","User.html#method-i-display_notifications","()",""],["duration","BookingsHelper","BookingsHelper.html#method-i-duration","(booking)",""],["edit","AvailabilitiesController","AvailabilitiesController.html#method-i-edit","()",""],["edit","BookingsController","BookingsController.html#method-i-edit","()",""],["edit","PresenterProfilesController","PresenterProfilesController.html#method-i-edit","()",""],["edit","SubjectsController","SubjectsController.html#method-i-edit","()",""],["edit_presenter_profile_link","ApplicationHelper","ApplicationHelper.html#method-i-edit_presenter_profile_link","(presenter, class_name = '')",""],["edit_profile_active?","PresentersHelper","PresentersHelper.html#method-i-edit_profile_active-3F","()",""],["edit_subjects","PresentersController","PresentersController.html#method-i-edit_subjects","()","<p>list current profiles and provide CrUD like interface.\n"],["end_time_string","Availability","Availability.html#method-i-end_time_string","()",""],["find","SchoolInfoController","SchoolInfoController.html#method-i-find","()",""],["find","SubjectsController","SubjectsController.html#method-i-find","()",""],["for_presenter","Availability","Availability.html#method-c-for_presenter","(presenter)","<p>get bookings for current user\n"],["from_string","TimeTools","TimeTools.html#method-c-from_string","(str)","<p>TODO error checking for parsing\n\n<pre>str needs to be in format &quot;hh:mm&quot;</pre>\n"],["fullname","CustomersHelper","CustomersHelper.html#method-i-fullname","(customer)",""],["fullname","PresenterProfilesHelper","PresenterProfilesHelper.html#method-i-fullname","(presenter)",""],["get_days","Availability","Availability.html#method-i-get_days","()","<p>convert each day attribute to a single bool array\n"],["get_private_full_name","Presenter","Presenter.html#method-i-get_private_full_name","(user)",""],["if_params_customer?","UsersHelper","UsersHelper.html#method-i-if_params_customer-3F","(field, params)",""],["if_params_presenter?","UsersHelper","UsersHelper.html#method-i-if_params_presenter-3F","(field, params)",""],["if_params_school_info?","UsersHelper","UsersHelper.html#method-i-if_params_school_info-3F","(field, params)",""],["index","AvailabilitiesController","AvailabilitiesController.html#method-i-index","()",""],["index","BookingsController","BookingsController.html#method-i-index","()",""],["index","CustomersController","CustomersController.html#method-i-index","()",""],["index","HomeController","HomeController.html#method-i-index","()",""],["index","PresentersController","PresentersController.html#method-i-index","()",""],["index","SearchController","SearchController.html#method-i-index","()",""],["index","SubjectsController","SubjectsController.html#method-i-index","()",""],["index","UsersController","UsersController.html#method-i-index","()",""],["is_booked","BookingsHelper","BookingsHelper.html#method-i-is_booked","(booking,user)",""],["is_empty?","SearchHelper","SearchHelper.html#method-i-is_empty-3F","(value)",""],["list_days","Availability","Availability.html#method-i-list_days","()","<p>convert the days to a readable string of day names.\n"],["my_bookings_active?","PresentersHelper","PresentersHelper.html#method-i-my_bookings_active-3F","()",""],["new","AvailabilitiesController","AvailabilitiesController.html#method-i-new","()","<p>form\n"],["new","BookingsController","BookingsController.html#method-i-new","()",""],["new","PresenterProfilesController","PresenterProfilesController.html#method-i-new","()",""],["new","PresentersController","PresentersController.html#method-i-new","()",""],["new","SubjectsController","SubjectsController.html#method-i-new","()",""],["new_booking_active?","CustomersHelper","CustomersHelper.html#method-i-new_booking_active-3F","()",""],["new_customer","Users::RegistrationsController","Users/RegistrationsController.html#method-i-new_customer","()",""],["new_presenter","Users::RegistrationsController","Users/RegistrationsController.html#method-i-new_presenter","()","<p>before_filter :configure_account_update_params, only: [:update]\n"],["notif_read","ApplicationController","ApplicationController.html#method-i-notif_read","()","<p>def configure_permitted_parameters\n\n<pre class=\"ruby\"><span class=\"ruby-comment\"># devise_parameter_sanitizer.permit(:sign_up) do |user_params|</span>\n<span class=\"ruby-comment\">#   ...</span>\n</pre>\n"],["notify_admin","Notification","Notification.html#method-c-notify_admin","(message, reference)","<p>Admin(s) are notified when a new account has been created\n"],["notify_applicable_users","Notification","Notification.html#method-c-notify_applicable_users","(creator, booking, type, reference)",""],["open","BookingsController","BookingsController.html#method-i-open","()",""],["open_bookings_active?","PresentersHelper","PresentersHelper.html#method-i-open_bookings_active-3F","()",""],["p_dashboard_active?","PresentersHelper","PresentersHelper.html#method-i-p_dashboard_active-3F","()",""],["p_profile_active?","UsersHelper","UsersHelper.html#method-i-p_profile_active-3F","()",""],["p_rego_active?","UsersHelper","UsersHelper.html#method-i-p_rego_active-3F","()",""],["pending","PresenterProfilesController","PresenterProfilesController.html#method-i-pending","()",""],["pending_count","UsersHelper","UsersHelper.html#method-i-pending_count","(presenter, customer)",""],["perform","BiannualUpdate","BiannualUpdate.html#method-c-perform","(user_id)","<p>Remind presenter to update profile 1 day after account creation if any\ndetails are nil\n"],["perform","ReminderNotification","ReminderNotification.html#method-c-perform","(user_id)","<p>Remind presenter to update profile 1 day after account creation if any\ndetails are nil\n"],["presenter_search_active?","UsersHelper","UsersHelper.html#method-i-presenter_search_active-3F","()",""],["presenters","UsersController","UsersController.html#method-i-presenters","()",""],["presenters_active?","UsersHelper","UsersHelper.html#method-i-presenters_active-3F","()",""],["profile_picture_path","Presenter","Presenter.html#method-i-profile_picture_path","(size = '100x100#')",""],["registration_mail","UserMailer","UserMailer.html#method-i-registration_mail","(admin)","<p>Send email to all admins regarding a new registration\n"],["registrations","UsersController","UsersController.html#method-i-registrations","()",""],["remove_subject","PresentersController","PresentersController.html#method-i-remove_subject","()",""],["schools_active?","UsersHelper","UsersHelper.html#method-i-schools_active-3F","()",""],["search_active?","UsersHelper","UsersHelper.html#method-i-search_active-3F","()",""],["send_message","Notification","Notification.html#method-c-send_message","(user, message, reference)","<p>User notified and emailed upon account creation\n"],["set_days","Availability","Availability.html#method-i-set_days","(days)","<p>TODO error checking\n"],["show","AvailabilitiesController","AvailabilitiesController.html#method-i-show","()",""],["show","BookingsController","BookingsController.html#method-i-show","()",""],["show","CustomersController","CustomersController.html#method-i-show","()",""],["show","PresenterProfilesController","PresenterProfilesController.html#method-i-show","()",""],["show","UsersController","UsersController.html#method-i-show","()","<p>given a user, will redirect to the relevant profile either presenter\nprofile, or customer profile\n"],["start_time_string","Availability","Availability.html#method-i-start_time_string","()",""],["subject_active?","UsersHelper","UsersHelper.html#method-i-subject_active-3F","()",""],["success","UsersController","UsersController.html#method-i-success","()",""],["suspend_user","UsersController","UsersController.html#method-i-suspend_user","()",""],["suspended_customers","User","User.html#method-c-suspended_customers","()",""],["suspended_presenters","User","User.html#method-c-suspended_presenters","()",""],["suspended_users","UsersController","UsersController.html#method-i-suspended_users","()",""],["suspended_users_active?","UsersHelper","UsersHelper.html#method-i-suspended_users_active-3F","()",""],["times_string","Availability","Availability.html#method-i-times_string","()",""],["to_string","Availability","Availability.html#method-i-to_string","(time)",""],["to_string","TimeTools","TimeTools.html#method-c-to_string","(time)","<p>Converts time from Int of minutes past midnight to “hh:mm”\n"],["unapproved_customers","User","User.html#method-c-unapproved_customers","()",""],["unapproved_presenters","User","User.html#method-c-unapproved_presenters","()",""],["unapproved_profiles","PresenterProfile","PresenterProfile.html#method-c-unapproved_profiles","()",""],["upcoming","Booking","Booking.html#method-c-upcoming","(user)","<p>Return upcoming booking for a customer or presenter Return all upcoming\nbookings for an admin\n"],["update","AvailabilitiesController","AvailabilitiesController.html#method-i-update","()",""],["update","BookingsController","BookingsController.html#method-i-update","()",""],["update","PresenterProfilesController","PresenterProfilesController.html#method-i-update","()",""],["update","SubjectsController","SubjectsController.html#method-i-update","()",""],["view_profile_active?","PresentersHelper","PresentersHelper.html#method-i-view_profile_active-3F","()",""],["vit_number_must_be_valid","Customer","Customer.html#method-i-vit_number_must_be_valid","()",""],["vit_number_must_be_valid","Presenter","Presenter.html#method-i-vit_number_must_be_valid","()",""],["vit_validation","Users::RegistrationsController","Users/RegistrationsController.html#method-i-vit_validation","()",""],["README","","README_rdoc.html","","<p>README\n<p>Personal Masterclass is a two-sided marketplace. On one side are the\ncountry-based schools and …\n"]]}}